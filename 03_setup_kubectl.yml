---
- name: Setup kubectl access on ansible-control node
  hosts: k8s_master
  become: yes
  vars:
    ansible_user: adminskv  # Укажите пользователя, от которого запускается Ansible
    ansible_become: yes
    ansible_become_user: root
    ansible_become_method: sudo
  tasks:
    - name: Check if admin.conf exists on master
      ansible.builtin.stat:
        path: /etc/kubernetes/admin.conf
      register: admin_conf_stat
      become: yes
      become_user: root

    - name: Fail if admin.conf is missing
      ansible.builtin.fail:
        msg: "File /etc/kubernetes/admin.conf not found on k8s-master-01. Please verify its existence or rerun 02_init_master.yml. Current path check: {{ admin_conf_stat.stat.path }}, exists: {{ admin_conf_stat.stat.exists }}"
      when: not admin_conf_stat.stat.exists

    - name: Debug file details
      ansible.builtin.debug:
        msg: "File exists: {{ admin_conf_stat.stat.exists }}, path: {{ admin_conf_stat.stat.path }}, readable: {{ admin_conf_stat.stat.readable }}, mode: {{ admin_conf_stat.stat.mode }}"
      when: admin_conf_stat.stat.exists

    - name: Create .kube directory for root
      ansible.builtin.file:
        path: /root/.kube
        state: directory
        owner: root
        group: root
        mode: '0755'
      delegate_to: "{{ groups['control'][0] }}"
      become: yes
      become_user: root

    - name: Accept SSH host key for ansible-control
      ansible.builtin.command: ssh-keyscan -H {{ hostvars[groups['control'][0]]['ansible_host'] }} >> ~/.ssh/known_hosts
      args:
        creates: ~/.ssh/known_hosts
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Test SSH connectivity to ansible-control
      ansible.builtin.command: ssh -o BatchMode=yes root@{{ hostvars[groups['control'][0]]['ansible_host'] }} "echo Connection successful"
      register: ssh_test
      failed_when: ssh_test.rc != 0
      timeout: 30

    - name: Debug SSH test result
      ansible.builtin.debug:
        msg: "SSH test output: {{ ssh_test.stdout }}"
      when: ssh_test.rc == 0

    - name: Create temporary copy of admin.conf
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /tmp/admin.conf
        remote_src: yes
        mode: '0600'
      become: yes
      become_user: root

    - name: Debug temporary file details
      ansible.builtin.stat:
        path: /tmp/admin.conf
      register: temp_stat
      become: yes
      become_user: root

    - name: Debug temp file permissions
      ansible.builtin.debug:
        msg: "Temp file exists: {{ temp_stat.stat.exists }}, path: {{ temp_stat.stat.path }}, readable: {{ temp_stat.stat.readable }}, mode: {{ temp_stat.stat.mode }}, owner: {{ temp_stat.stat.pw_name }}"
      when: temp_stat.stat.exists

    - name: Synchronize admin.conf to ansible-control with timeout
      ansible.posix.synchronize:
        src: /tmp/admin.conf
        dest: /root/.kube/config
        mode: push
        rsync_opts:
          - "--chmod=0600"
        rsync_timeout: 30
      delegate_to: "{{ groups['control'][0] }}"
      become: yes
      become_user: root
      register: sync_result
      retries: 3
      delay: 5
      until: sync_result is success
      ignore_errors: yes

    - name: Debug synchronize result
      ansible.builtin.debug:
        msg: "Synchronize result: {{ sync_result.msg }}"
      when: sync_result.failed

    - name: Copy admin.conf to ansible-control using scp as fallback
      ansible.builtin.command: scp /tmp/admin.conf root@{{ hostvars[groups['control'][0]]['ansible_host'] }}:/root/.kube/config
      become: yes
      become_user: root
      register: scp_result
      retries: 3
      delay: 5
      until: scp_result.rc == 0
      when: sync_result.failed | default(true)

    - name: Remove temporary copy of admin.conf
      ansible.builtin.file:
        path: /tmp/admin.conf
        state: absent
      become: yes
      become_user: root
      when: sync_result.changed | default(false) or scp_result.changed | default(false)
